CMAKE_MINIMUM_REQUIRED(VERSION 3.4.1)
SET(CMAKE_SKIP_BUILD_RPATH true)

PROJECT(${NAME}-tizen-capi VERSION ${VERSION} LANGUAGES CXX)

ADD_DEFINITIONS(-DLOG_TAG="BEYOND_TIZEN_CAPI")

INCLUDE(FindPkgConfig)
PKG_CHECK_MODULES(PKGS REQUIRED
    glib-2.0
)
FOREACH(CFLAG ${PKGS_CFLAGS})
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CFLAG}")
ENDFOREACH(CFLAG)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")

AUX_SOURCE_DIRECTORY(src LIB_SRCS)
ADD_LIBRARY(${PROJECT_NAME} SHARED ${LIB_SRCS})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${BEYOND_LIBRARIES} ${LOG_LIBRARIES} ${PKGS_LDFLAGS})
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PUBLIC
    $<TARGET_PROPERTY:${NAME},INCLUDE_DIRECTORIES>
    include
)

SET(PC_NAME ${PROJECT_NAME})
CONFIGURE_FILE(${PROJECT_NAME}.pc.in ${PROJECT_NAME}.pc @ONLY)
SET_DIRECTORY_PROPERTIES(PROPERTIES ADDITIONAL_CMAKE_CLEAN_FILES "${PROJECT_NAME}.pc")
INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}.pc DESTINATION ${CMAKE_INSTALL_PCDIR})

SET(PUBLIC_HEADERS
    include/${NAME}/authenticator.h
    include/${NAME}/${NAME}.h
    include/${NAME}/discovery.h
    include/${NAME}/inference.h
    include/${NAME}/peer.h
    include/${NAME}/runtime.h
)

SET(TARGET_HEADERS "")
FOREACH(TARGET_HEADER ${PUBLIC_HEADERS})
    IF(NOT TARGET_HEADERS STREQUAL "")
        SET(TARGET_HEADERS "${TARGET_HEADERS}\;")
    ENDIF(NOT TARGET_HEADERS STREQUAL "")
	SET(TARGET_HEADERS "${TARGET_HEADERS}${TARGET_HEADER}")
ENDFOREACH(TARGET_HEADER)

IF(PLATFORM_PACKAGE)
    SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES
        PUBLIC_HEADER ${TARGET_HEADERS}
        VERSION ${PROJECT_VERSION}
        SOVERSION ${PROJECT_VERSION_MAJOR}
    )
ELSE(PLATFORM_PACKAGE)
    # NOTE:
    # In order to use the BeyonD for the application only (as an external library),
    # The SONAME must be ended with ".so"
    # because the Tizen packaging utility exclude the "so.${VERSION}" and "so.${VERSION}.${SOVERSION}" file from the TPK file file
    # and it causes the ELF loader cannot find necessary shared object files during loading the application.
    SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES
        PUBLIC_HEADER ${TARGET_HEADERS}
    )
ENDIF(PLATFORM_PACKAGE)

INSTALL(TARGETS ${PROJECT_NAME}
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${NAME}
)

ADD_DEPENDENCIES(${PROJECT_NAME} ${DEPENDS_ON_BEYOND})

IF(ENABLE_GTEST)
    ADD_SUBDIRECTORY(ut)
ENDIF(ENABLE_GTEST)
