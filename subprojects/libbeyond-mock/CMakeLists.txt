CMAKE_MINIMUM_REQUIRED(VERSION 3.4.1)
SET(CMAKE_SKIP_BUILD_RPATH true)
PROJECT(${NAME}-mock VERSION ${VERSION} LANGUAGES CXX)

ADD_DEFINITIONS(-DLOG_TAG="BEYOND_MOCK")

INCLUDE_DIRECTORIES(include)
AUX_SOURCE_DIRECTORY(src MOCK_SRCS)

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")

ADD_LIBRARY(${PROJECT_NAME} SHARED ${MOCK_SRCS})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} dl)
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PUBLIC include)

SET(PC_NAME ${PROJECT_NAME})
CONFIGURE_FILE(${PROJECT_NAME}.pc.in ${PROJECT_NAME}.pc @ONLY)
INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}.pc DESTINATION ${CMAKE_INSTALL_PCDIR})

SET(PUBLIC_HEADERS
    include/${NAME}/mock/mock.h
    include/${NAME}/mock/mock_ctrl.h
)

SET(TARGET_HEADERS "")
FOREACH(TARGET_HEADER ${PUBLIC_HEADERS})
    IF(NOT TARGET_HEADERS STREQUAL "")
        SET(TARGET_HEADERS "${TARGET_HEADERS}\;")
    ENDIF(NOT TARGET_HEADERS STREQUAL "")
	SET(TARGET_HEADERS "${TARGET_HEADERS}${TARGET_HEADER}")
ENDFOREACH(TARGET_HEADER)

IF(PLATFORM_PACKAGE)
    SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES
        PUBLIC_HEADER ${TARGET_HEADERS}
        VERSION ${PROJECT_VERSION}
        SOVERSION ${PROJECT_VERSION_MAJOR}
    )
ELSE(PLATFORM_PACKAGE)
    # NOTE:
    # In order to use the BeyonD for the application only (as an external library),
    # The SONAME must be ended with ".so"
    # because the Tizen packaging utility exclude the "so.${VERSION}" and "so.${VERSION}.${SOVERSION}" file from the TPK file file
    # and it causes the ELF loader cannot find necessary shared object files during loading the application.
    SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES
        PUBLIC_HEADER ${TARGET_HEADERS}
    )
ENDIF(PLATFORM_PACKAGE)

INSTALL(TARGETS ${PROJECT_NAME}
	LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
	PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${NAME}/mock
)

SET_DIRECTORY_PROPERTIES(PROPERTIES ADDITIONAL_CMAKE_CLEAN_FILES "${PROJECT_NAME}.pc")
