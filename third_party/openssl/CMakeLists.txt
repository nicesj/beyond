CMAKE_MINIMUM_REQUIRED(VERSION 3.4.1)
SET(CMAKE_SKIP_BUILD_RPATH true)

PROJECT(openssl VERSION 1.1.1 LANGUAGES CXX)

IF(ANDROID_ABI STREQUAL x86_64)
    SET(ANDROID_TARGET_ARCH x86_64)
ENDIF(ANDROID_ABI STREQUAL x86_64)

IF(ANDROID_ABI STREQUAL x86)
    SET(ANDROID_TARGET_ARCH x86)
ENDIF(ANDROID_ABI STREQUAL x86)

IF(ANDROID_ABI STREQUAL armeabi-v7a)
    SET(ANDROID_TARGET_ARCH arm)
ENDIF(ANDROID_ABI STREQUAL armeabi-v7a)

IF(ANDROID_ABI STREQUAL arm64-v8a)
    SET(ANDROID_TARGET_ARCH arm64)
ENDIF(ANDROID_ABI STREQUAL arm64-v8a)

IF (CMAKE_BUILD_TYPE MATCHES Debug)
    SET(BUILD_OPTION -d)
ENDIF (CMAKE_BUILD_TYPE MATCHES Debug)

ADD_CUSTOM_COMMAND(
    OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/lib/libssl.a;${CMAKE_CURRENT_BINARY_DIR}/lib/libcrypto.a
    COMMAND ${CMAKE_COMMAND} -E env
        ANDROID_NDK_HOME=${ANDROID_NDK_HOME}
        PATH=${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin:/usr/bin:/bin
        test ! -e Makefile || make clean
    COMMAND ${CMAKE_COMMAND} -E env
        ANDROID_NDK_HOME=${ANDROID_NDK_HOME}
        PATH=${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin:/usr/bin:/bin
        ./Configure android-${ANDROID_TARGET_ARCH} no-tests -D__ANDROID_ABI__=${ANDROID_NATIVE_API_LEVEL} --prefix=${CMAKE_CURRENT_BINARY_DIR} --openssldir=${CMAKE_CURRENT_BINARY_DIR}/etc ${BUILD_OPTION}
    COMMAND ${CMAKE_COMMAND} -E env
        ANDROID_NDK_HOME=${ANDROID_NDK_HOME}
        PATH=${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin:/usr/bin:/bin
        make install
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
    COMMENT "Build the openssl"
    VERBATIM
)

ADD_CUSTOM_TARGET(
    ${PROJECT_NAME}_build ALL
    DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/lib/libssl.a;${CMAKE_CURRENT_BINARY_DIR}/lib/libcrypto.a
)

SET_SOURCE_FILES_PROPERTIES(
    ${CMAKE_CURRENT_BINARY_DIR}/lib/libssl.a;${CMAKE_CURRENT_BINARY_DIR}/lib/libcrypto.a
    PROPERTIES GENERATED TRUE
)

ADD_LIBRARY(${PROJECT_NAME} STATIC IMPORTED GLOBAL)
ADD_DEPENDENCIES(${PROJECT_NAME} ${PROJECT_NAME}_build)
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES
    INTERFACE_INCLUDE_DIRECTORIES ${CMAKE_CURRENT_SOURCE_DIR}/include
    IMPORTED_LOCATION ${CMAKE_CURRENT_BINARY_DIR}/lib/libssl.a
)

ADD_LIBRARY(${PROJECT_NAME}_crypto STATIC IMPORTED GLOBAL)
ADD_DEPENDENCIES(${PROJECT_NAME}_crypto ${PROJECT_NAME}_build)
SET_TARGET_PROPERTIES(${PROJECT_NAME}_crypto PROPERTIES
    INTERFACE_INCLUDE_DIRECTORIES ${CMAKE_CURRENT_SOURCE_DIR}/include
    IMPORTED_LOCATION ${CMAKE_CURRENT_BINARY_DIR}/lib/libcrypto.a
)
